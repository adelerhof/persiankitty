name: Build and Push Docker Image with ARC (Buildah)

on: [push]

env:
  # Define Registry URL
  REGISTRY: ghcr.io
  # Define image name (adjust if needed)
  IMAGE_NAME: ${{ github.repository }} # Uses repo name like 'owner/repo'
  # Construct full image path (GHCR requires lowercase owner)
  IMAGE_REGISTRY_PATH: ghcr.io/${{ github.repository_owner }}/${{ github.repository }}


jobs:
  build:
    # IMPORTANT: Ensure this job runs on runners managed by the ARC
    # deployment/set where dockerEnabled: true is configured.
    # Use labels defined in your RunnerDeployment/RunnerSet.
    runs-on: arc-runner-set # Adjust label as needed

    # Define the container where job steps will run
    container:
      image: quay.io/buildah/stable:v1.39 # Or choose a newer stable tag if available
      # options: --privileged # Required for Buildah to run in a container

    permissions:
      contents: read
      packages: write # Needed for ghcr.io

    steps:
      - name: Checkout code
        uses: actions/checkout@v4


      # Buildah is now in the PATH, use sudo to avoid rootless issues
      - name: Log in to GitHub Container Registry (as root)
        run: sudo buildah login ${{ env.REGISTRY }} -u ${{ github.actor }} --password-stdin <<< "${{ secrets.GITHUB_TOKEN }}"

      - name: Build Docker image with Buildah (as root)
        id: build
        run: |
          sudo buildah bud \
            --tag ${{ env.IMAGE_REGISTRY_PATH }}:${{ github.sha }} \
            -f Dockerfile .
          sudo buildah tag ${{ env.IMAGE_REGISTRY_PATH }}:${{ github.sha }} ${{ env.IMAGE_REGISTRY_PATH }}:latest
          echo "primary_tag=${{ github.sha }}" >> $GITHUB_OUTPUT
          echo "latest_tag=latest" >> $GITHUB_OUTPUT

      - name: Push Docker image with Buildah (as root)
        run: |
          sudo buildah push ${{ env.IMAGE_REGISTRY_PATH }}:${{ steps.build.outputs.primary_tag }}
          sudo buildah push ${{ env.IMAGE_REGISTRY_PATH }}:${{ steps.build.outputs.latest_tag }}

      # Optional: Tag and Push Release Version
      - name: Tag and Push Release Version (if Git tag exists)
        # ... (same as before, just ensure commands use sudo) ...
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          VERSION=$(echo $GITHUB_REF | sed 's/refs\/tags\/v*//')
          echo "Tagging release version: $VERSION"
          sudo buildah tag ${{ env.IMAGE_REGISTRY_PATH }}:${{ github.sha }} ${{ env.IMAGE_REGISTRY_PATH }}:${VERSION}
          sudo buildah push ${{ env.IMAGE_REGISTRY_PATH }}:${VERSION}